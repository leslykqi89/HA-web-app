Description: >
  Lesly Quinonez
  Template used for create the DevOps Cloud Service - Project 2

Parameters:
  EnvironmentName:
    Description: Environment Name
    Type: String
  EnvironmentId:
    Description: Environment ID
    Type: String
  EC2KeyName:
    Description: Name of the EC2 KeyPair used by the Bastion instance.
    Type: AWS::EC2::KeyPair::KeyName
  BastionImageId:
    Description: Bastion AMI used.
    Type: String
  EC2ImageId:
    Description: Image used for the EC2 instances
    Type: String
  EC2Type:
    Description: Type of the EC2 used
    Type: String
  BastionType:
    Description: Type of the Bastion instances
    Type: String
  S3Bucket:
    Description: Bucket URL (Ex. s3://<bucket-name>)
    Type: String
  ZipFile:
    Description: Zip file path
    Type: String

Resources:
  BastionLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: 
        Fn::ImportValue:
          !Sub "${EnvironmentId}-BastionInstanceProfile"
      ImageId: !Ref BastionImageId
      InstanceMonitoring: true
      InstanceType: t2.nano
      KeyName: !Ref EC2KeyName
      SecurityGroups:
        - Fn::ImportValue:
            !Sub "${EnvironmentId}-BastionSecurityGroup"

  BastionAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Cooldown: 60
      HealthCheckGracePeriod: 120
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref BastionLaunchConfiguration
      MaxSize: 1
      MinSize: 1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - Bastion AutoScaling
          PropagateAtLaunch: true
      VPCZoneIdentifier: 
        Fn::Split:
          - ","
          - Fn::ImportValue:
              !Sub "${EnvironmentId}-PUB-NET"

  ELBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /index.html
      HealthCheckTimeoutSeconds: 5
      Port: 80
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} - Elastic Load Balancer Target Group
      UnhealthyThresholdCount: 5
      VpcId:
        Fn::ImportValue:
            !Sub "${EnvironmentId}-VPCID"

  ELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Subnets: 
        Fn::Split:
          - ","
          - Fn::ImportValue:
              !Sub "${EnvironmentId}-PUB-NET"
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: 60
      SecurityGroups:
        - Fn::ImportValue:
            !Sub "${EnvironmentId}-LBSecurityGroup"
      Tags:
        - Key: Name
          Value:  !Sub ${EnvironmentName} - Elastic Load Balancer

  ELBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ELBTargetGroup
      LoadBalancerArn: !Ref ELB
      Port: 80
      Protocol: HTTP

  EC2LaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      IamInstanceProfile: 
        Fn::ImportValue:
          !Sub "${EnvironmentId}-EC2InstanceProfile"
      ImageId: !Ref EC2ImageId
      SecurityGroups: 
        - Fn::ImportValue:
            !Sub "${EnvironmentId}-EC2SecurityGroup"
        - Fn::ImportValue:
            !Sub "${EnvironmentId}-BastionSecurityGroup"
      InstanceType: !Ref EC2Type
      KeyName: !Ref EC2KeyName
      BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
              VolumeSize: '10'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo su
          apt-get update -y
          apt-get install unzip awscli -y
          apt-get install apache2 -y
          systemctl start apache2.service
          aws s3 cp ${S3Bucket}/${ZipFile} /tmp/${ZipFile}
          rm -rf /var/www/html/*
          unzip /tmp/${ZipFile} -d /var/www/html
  
  EC2AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      Cooldown: 60
      HealthCheckGracePeriod: 600
      HealthCheckType: ELB
      LaunchConfigurationName: !Ref EC2LaunchConfiguration
      MaxSize: 4
      MinSize: 4
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} EC2 Auto Scaling Group
          PropagateAtLaunch: true
      VPCZoneIdentifier:
        Fn::Split:
          - ","
          - Fn::ImportValue:
              !Sub "${EnvironmentId}-PRIV-NET"
      TargetGroupARNs:
        - !Ref ELBTargetGroup

Outputs:
  ELBDnsName:
    Description: Load Balancer DNS.
    Value: !GetAtt ELB.DNSName
    Export: 
      Name: !Sub ${EnvironmentId}-ELB-DNS
  ELBHostName:
    Description: Load Balancer Hostname
    Value: !Join ['', ['http://', !GetAtt ELB.DNSName ]]
    Export: 
      Name: !Sub ${EnvironmentId}-ELB-Host

